openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://petstore.swagger.io/api
paths:
  /pets/{id}:
    get:
      summary: Returns a pet by ID
      description: Returns a pet based on a single ID
      operationId: findPetByID
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: pet response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
  /person/{id}:
    get:
      summary: Returns a person by ID
      description: Returns a person based on a single ID
      operationId: findPersonByID
      parameters:
        - name: id
          in: path
          description: ID of person to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: person response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
  /car/{id}:
    get:
      summary: Returns a car by ID
      description: Returns a car based on a single ID
      operationId: findCarByID
      parameters:
        - name: id
          in: path
          description: ID of car to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: car response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Car"

components:
  schemas:
    Pet:
      properties:
        age:
          x-go-type: myuuid.UUID
          x-go-type-import:
            path: github.com/google/uuid
            name: myuuid
      required:
        - age
    Person:
      properties:
        age:
          x-go-type: pgext.Puint
          x-go-type-import:
            path: github.com/CavernaTechnologies/pgext
      required:
        - age
    Car:
      properties:
        age:
          type: integer
      required:
        - age
